---
interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="apple-touch-icon" sizes="180x180" href="/me/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/me/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/me/favicon-16x16.png" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body class="bg-white text-blueGray-800 dark:text-blueGray-200 dark:bg-gray-800">
    <slot />
  </body>
</html>

<script is:inline>
  const theme = (() => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    if (globalThis.matchMedia("(prefers-color-scheme: dark)").matches) {
      return "dark";
    }
    return "light";
  })();

  if (theme === "light") {
    document.documentElement.classList.remove("dark");
  } else {
    document.documentElement.classList.add("dark");
  }
  globalThis.localStorage.setItem("theme", theme);
</script>

<style is:global>
  html {
    --uno: font-dm scroll-smooth;
  }

  .container {
    --uno: max-w-screen-lg w-full px-3.5 m-auto;
  }
</style>
